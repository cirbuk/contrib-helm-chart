apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "redash.fullname" . }}
  labels:
    {{- include "redash.labels" . | nindent 4 }}
    app.kubernetes.io/component: server
spec:
  replicas: {{ .Values.server.replicaCount }}
  selector:
    matchLabels:
      {{- include "redash.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: server
  template:
    metadata:
      labels:
        {{- include "redash.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: server
      {{- if .Values.server.podAnnotations }}
      annotations:
      {{ toYaml .Values.server.podAnnotations | nindent 8 }}
      {{- end }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "redash.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ include "redash.name" . }}-server
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/bin/sh"]
          args: ["-c", ". /config/dynamicenv.sh && wget https://raw.githubusercontent.com/plotly/datasets/master/geojson-counties-fips.json -O /app/client/dist/data/650f3ee.japan.prefectures.geo.json && sed -i 's/GEO_ID/iso_3166_2/g' /app/client/dist/data/650f3ee.japan.prefectures.geo.json && /app/bin/docker-entrypoint server"]
          volumeMounts:
            - name: config
              mountPath: /config
            - name: unsafe-params
              mountPath: /app/redash/models/parameterized_query.py
              subPath: parameterized_query.py
            #- name: map-usa
            #  mountPath: /app/client/dist/data/650f3ee.japan.prefectures.geo.json
            #  subPath: 650f3ee.japan.prefectures.geo.json
          env:
          {{- include "redash.env" . | nindent 12 }}
          {{- range $key, $value := .Values.server.env }}
            - name: "{{ $key }}"
              value: "{{ $value }}"
          {{- end }}
          ports:
            - containerPort: {{ .Values.server.httpPort }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.server.httpPort }}
            # Redash can take a while to come up initially, so we delay checks.
            initialDelaySeconds: 90
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: /ping
              port: {{ .Values.server.httpPort }}
            initialDelaySeconds: 10
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          resources:
{{ toYaml .Values.server.resources | indent 12 }}
      volumes:
        - name: config
          configMap:
            name: {{ include "redash.fullname" . }}
        - name: unsafe-params
          configMap:
            name: unsafe-params
        #- name: map-usa
        #  configMap:
        #    name: map-usa
    {{- with .Values.server.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.server.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.server.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
